{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport axios from 'axios';\nimport { useStyles } from \"../styles/responsiveStyle\";\nimport BackgroundImageService from \"../components/CatImage\";\nimport { SkeletonContainer } from 'react-native-dynamic-skeletons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CategoriesScreen = function CategoriesScreen(_ref) {\n  var navigation = _ref.navigation;\n  var styles = useStyles();\n  var imageData = BackgroundImageService();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var Cat = \"Categories\";\n  useEffect(function () {\n    var sF = navigation.addListener('focus', function () {\n      axios.get(\"https://craggycosmetic.com/api/products/category/\", {\n        headers: {\n          'consumer_key': '3b137de2b677819b965ddb7288bd73f62fc6c1f04a190678ca6e72fca3986629'\n        }\n      }).then(function (res) {\n        if (res.data.status = \"success\") {\n          setData(res.data.response);\n          setTimeout(function () {\n            setLoading(false);\n          }, 2000);\n        }\n      });\n    });\n    return sF;\n  }, []);\n  return _jsxs(View, {\n    children: [_jsx(View, {\n      style: styles.categories_root,\n      children: _jsx(Text, {\n        style: styles.categories_text,\n        children: Cat\n      })\n    }), _jsx(ScrollView, {\n      children: _jsx(View, {\n        style: styles.categoryMainDiv,\n        children: data.map(function (data, i) {\n          if (data.count > 0) return _jsx(SkeletonContainer, {\n            isLoading: loading,\n            children: _jsx(TouchableOpacity, {\n              activeOpacity: 0.8,\n              style: styles1.touchable_style,\n              onPress: function onPress() {\n                navigation.navigate('ProductListing', {\n                  id: data.term_id,\n                  name: data.name\n                });\n              },\n              children: _jsxs(View, {\n                style: styles.catMainSec,\n                children: [_jsxs(Text, {\n                  style: styles.mens_text,\n                  children: [\" \", data.name, \" \"]\n                }), imageData.map(function (item, id) {\n                  return item.name === data.slug && _jsx(Image, {\n                    style: {\n                      width: '100%',\n                      height: 95\n                    },\n                    source: item.image\n                  }, id);\n                })]\n              })\n            }, i)\n          }, i);\n        })\n      })\n    })]\n  });\n};\nexport default CategoriesScreen;\nvar styles1 = StyleSheet.create({\n  img_style: {\n    width: '100%',\n    height: 95\n  },\n  touchable_style: {\n    backgroundColor: ['#e1e1e1', '#f2f2f2', '#e1e1e1'],\n    width: '100%',\n    height: 95,\n    marginBottom: 8\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","axios","useStyles","BackgroundImageService","SkeletonContainer","CategoriesScreen","navigation","styles","imageData","data","setData","loading","setLoading","Cat","sF","addListener","get","headers","then","res","status","response","setTimeout","categories_root","categories_text","categoryMainDiv","map","i","count","styles1","touchable_style","navigate","id","term_id","name","catMainSec","mens_text","item","slug","width","height","image","StyleSheet","create","img_style","backgroundColor","marginBottom"],"sources":["D:/gitProject/craggy_cosmatics/src/screens/CategoriesScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { View, Text, Image, TouchableOpacity, Dimensions, FlatList, StyleSheet, ScrollView } from 'react-native'\r\nimport axios from 'axios'\r\nimport { useStyles } from '../styles/responsiveStyle';\r\nimport BackgroundImageService from '../components/CatImage'\r\nimport { SkeletonContainer } from 'react-native-dynamic-skeletons';\r\n\r\nconst CategoriesScreen = ({ navigation }) => {\r\n  const styles = useStyles()\r\n  const imageData = BackgroundImageService();\r\n  const [data, setData] = useState([])\r\n  // console.log(\"tttttttt\", data)\r\n  const [loading, setLoading] = useState(true);\r\n  let Cat = \"Categories\";\r\n  // console.log('category', loading);\r\n  useEffect(() => {\r\n    const sF = navigation.addListener('focus', () => {\r\n      axios.get(\r\n        `https://craggycosmetic.com/api/products/category/`,\r\n        {\r\n          headers: {\r\n            'consumer_key': '3b137de2b677819b965ddb7288bd73f62fc6c1f04a190678ca6e72fca3986629',\r\n          }\r\n        }\r\n      ).then((res) => {\r\n        if (res.data.status = \"success\") {\r\n          setData(res.data.response)\r\n          setTimeout(() => {\r\n            setLoading(false)\r\n          }, 2000);\r\n        }\r\n\r\n      })\r\n    });\r\n    return sF;\r\n  }, [])\r\n\r\n  return (\r\n    <View>\r\n      <View style={styles.categories_root}>\r\n        <Text style={styles.categories_text}>{Cat}</Text>\r\n      </View>\r\n      <ScrollView>\r\n        <View style={styles.categoryMainDiv}>\r\n          {data.map((data, i) => {\r\n            if (data.count > 0)\r\n              return (\r\n                <SkeletonContainer isLoading={loading} key={i} >\r\n                  <TouchableOpacity\r\n                    activeOpacity={0.8}\r\n                    style={styles1.touchable_style}\r\n                    onPress={() => { navigation.navigate('ProductListing', { id: data.term_id, name: data.name }) }}\r\n                    key={i}\r\n                  >\r\n                    <View style={styles.catMainSec}>\r\n                      <Text style={styles.mens_text}> {data.name} </Text>\r\n                      {imageData.map((item, id) => {\r\n                        return (\r\n                          (item.name === data.slug) &&\r\n                          <Image style={{ width: '100%', height: 95, }} source={item.image} key={id} />\r\n                        )\r\n                      })}\r\n                    </View>\r\n                  </TouchableOpacity>\r\n                </SkeletonContainer>\r\n              )\r\n          })}\r\n        </View>\r\n      </ScrollView>\r\n    </View >\r\n  );\r\n};\r\nexport default CategoriesScreen;\r\nconst styles1 = StyleSheet.create({\r\n  img_style: {\r\n    width: '100%',\r\n    height: 95\r\n  },\r\n  touchable_style: {\r\n    backgroundColor: ['#e1e1e1', '#f2f2f2', '#e1e1e1'],\r\n    width: '100%',\r\n    height: 95,\r\n    marginBottom: 8\r\n  }\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}