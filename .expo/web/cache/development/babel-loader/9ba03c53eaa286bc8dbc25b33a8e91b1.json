{"ast":null,"code":"import React, { useEffect, useRef } from 'react';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { animationStyle, linearGradientPositions } from \"./utils\";\nexport var Skeleton = function Skeleton(_ref) {\n  var colors = _ref.colors,\n    style = _ref.style,\n    _ref$animationType = _ref.animationType,\n    animationType = _ref$animationType === void 0 ? 'leftRight' : _ref$animationType,\n    duration = _ref.duration;\n  var COLORS = colors || ['#e1e1e1', '#f5f5f5', '#e1e1e1'];\n  var animationValue = useRef(new Animated.Value(0)).current;\n  var getOutput = function getOutput(output) {\n    return animationValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: output\n    });\n  };\n  var _linearGradientPositi = linearGradientPositions(animationType),\n    start = _linearGradientPositi.start,\n    end = _linearGradientPositi.end;\n  useEffect(function () {\n    Animated.loop(Animated.timing(animationValue, {\n      toValue: 1,\n      duration: duration || 1000,\n      useNativeDriver: true\n    })).start();\n  }, [animationValue, duration]);\n  return React.createElement(View, {\n    style: [styles.overlay, style]\n  }, React.createElement(Animated.View, {\n    style: [StyleSheet.absoluteFillObject, animationStyle(animationType, getOutput)]\n  }, React.createElement(LinearGradient, {\n    start: start,\n    end: end,\n    colors: COLORS,\n    style: styles.container\n  })));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  overlay: {\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,cAAc,QAAQ,sBAAsB;AAAA;AAAA;AAAA;AAGrD,SAASC,cAAc,EAAEC,uBAAuB;AAEhD,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,CAAGC,MAKH;EAAA,IAJnBC,MAAM,GAIQD,KAJdC,MAAM;IACNC,KAAK,GAGSF,KAHdE,KAAK;IAAA,qBAGSF,KAFdG,aAAa;IAAbA,aAAa,mCAAG,WAAW;IAC3BC,WACcJ,KADdI;EAEA,IAAMC,MAAM,GAAGJ,MAAM,IAAI,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;EAC1D,IAAMK,cAAc,GAAGX,MAAM,CAAC,IAAIY,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO;EAE5D,IAAMC,SAAS,GAAIC,SAAbD,SAAS,CAAIC,MAA2B,EAAK;IACjD,OAAOL,cAAc,CAACM,WAAW,CAAC;MAChCC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAClBC,WAAW,EAAEH;IACf,CAAC,CAAC;EACJ,CAAC;EAED,4BAAuBb,uBAAuB,CAACK,aAAa,CAAC;IAArDY,KAAK,yBAALA,KAAK;IAAEC;EAEftB,SAAS,CAAC,YAAM;IACda,QAAQ,CAACU,IAAI,CACXV,QAAQ,CAACW,MAAM,CAACZ,cAAc,EAAE;MAC9Ba,OAAO,EAAE,CAAC;MACVf,QAAQ,EAAEA,QAAQ,IAAI,IAAI;MAC1BgB,eAAe,EAAE;IACnB,CAAC,CAAC,CACH,CAACL,KAAK,EAAE;EACX,CAAC,EAAE,CAACT,cAAc,EAAEF,QAAQ,CAAC,CAAC;EAE9B,OACEX,oBAAC4B,IAAI;IAACnB,KAAK,EAAE,CAACoB,MAAM,CAACC,OAAO,EAAErB,KAAK;EAAE,GACnCT,oBAACc,QAAQ,CAACc,IAAI;IACZnB,KAAK,EAAE,CACLsB,UAAU,CAACC,kBAAkB,EAC7B5B,cAAc,CAACM,aAAa,EAAEO,SAAS,CAAC;EACxC,GAEFjB,oBAACG,cAAc;IACbmB,KAAK,EAAEA,KAAM;IACbC,GAAG,EAAEA,GAAI;IACTf,MAAM,EAAEI,MAAO;IACfH,KAAK,EAAEoB,MAAM,CAACI;EAAU,EACxB,CACY,CACX;AAEX,CAAC;AAED,IAAMJ,MAAM,GAAGE,UAAU,CAACG,MAAM,CAAC;EAC/BD,SAAS,EAAE;IACTE,IAAI,EAAE;EACR,CAAC;EACDL,OAAO,EAAE;IACPM,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC","names":["React","useEffect","useRef","LinearGradient","animationStyle","linearGradientPositions","Skeleton","_ref","colors","style","animationType","duration","COLORS","animationValue","Animated","Value","current","getOutput","output","interpolate","inputRange","outputRange","start","end","loop","timing","toValue","useNativeDriver","View","styles","overlay","StyleSheet","absoluteFillObject","container","create","flex","overflow"],"sourceRoot":"../../src","sources":["skeleton.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}