{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Controller, useForm } from 'react-hook-form';\nimport TextInput from \"../components/InputHook\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginActions } from \"../store/UserSlice\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { TextInput as Input, Title } from 'react-native-paper';\nimport Checkbox from 'expo-checkbox';\nimport { useStyles } from \"../styles/responsiveStyle\";\nimport { Ionicons } from '@expo/vector-icons';\nimport BackButton from \"../components/BackButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ForgetPasswordScreen = function ForgetPasswordScreen(_ref) {\n  var navigation = _ref.navigation;\n  var styles = useStyles();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isChecked = _useState2[0],\n    setChecked = _useState2[1];\n  var dispatch = useDispatch();\n  var logindata = useSelector(function (state) {\n    return state.userData.user;\n  });\n  var isLoggedIn = useSelector(function (state) {\n    return state.userData.isLoggedIn;\n  });\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    login = _useState4[0],\n    setLogin = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    passwordVisible = _useState6[0],\n    setPasswordVisible = _useState6[1];\n  useEffect(function () {\n    if (isLoggedIn == true) {\n      navigation.reset({\n        index: 0,\n        routes: [{\n          name: 'HomeScreen'\n        }]\n      });\n      setLogin(true);\n    }\n    ;\n  }, [login]);\n  var _useForm = useForm({\n      defaultValues: {\n        email: '',\n        password: ''\n      }\n    }),\n    control = _useForm.control,\n    handleSubmit = _useForm.handleSubmit,\n    reset = _useForm.reset,\n    errors = _useForm.formState.errors;\n  var onSubmit = function onSubmit(data) {\n    navigation.navigate('OtpScreen');\n    reset();\n  };\n  return _jsx(View, {\n    style: styles.rootContainter,\n    children: _jsxs(ImageBackground, {\n      source: require(\"../../assets/images/login-bg.jpg\"),\n      resizeMode: \"cover\",\n      style: styles.loginBg,\n      children: [_jsx(BackButton, {\n        goBack: navigation.goBack\n      }), _jsx(Image, {\n        source: require(\"../../assets/images/logo-image.jpg\"),\n        style: styles.logoBackground\n      }), _jsxs(View, {\n        style: styles.Containterlogin,\n        children: [_jsxs(View, {\n          style: styles.inputWidth,\n          children: [_jsx(Controller, {\n            control: control,\n            rules: {\n              required: true\n            },\n            render: function render(_ref2) {\n              var _ref2$field = _ref2.field,\n                onChange = _ref2$field.onChange,\n                onBlur = _ref2$field.onBlur,\n                value = _ref2$field.value;\n              return _jsx(TextInput, {\n                style: styles.loginInput,\n                onChangeText: onChange,\n                value: value,\n                label: \"Email / Phone\",\n                returnKeyType: \"next\",\n                autoCapitalize: \"none\",\n                autoCompleteType: \"email\",\n                textContentType: \"emailAddress\",\n                keyboardType: \"email-address\"\n              });\n            },\n            name: \"email\"\n          }), errors.email && _jsx(Text, {\n            style: styles.inputError,\n            children: \"This field is required.\"\n          })]\n        }), _jsx(View, {\n          style: styles.LoginButtong,\n          children: _jsx(TouchableOpacity, {\n            onPress: handleSubmit(onSubmit),\n            style: styles.buttonStyle,\n            children: _jsx(Title, {\n              style: styles.LoginButtongTittle,\n              children: \"Send OTP\"\n            })\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.loginBottom,\n        children: [_jsx(Text, {\n          style: styles.needHelpBottom,\n          children: \"Need Help?\"\n        }), _jsx(TouchableOpacity, {\n          children: _jsx(Text, {\n            style: styles.contactUsBottom,\n            children: \" Contact us\"\n          })\n        })]\n      })]\n    })\n  });\n};\nexport default ForgetPasswordScreen;","map":{"version":3,"names":["React","useState","useEffect","Controller","useForm","TextInput","useDispatch","useSelector","loginActions","TouchableOpacity","Input","Title","Checkbox","useStyles","Ionicons","BackButton","ForgetPasswordScreen","navigation","styles","isChecked","setChecked","dispatch","logindata","state","userData","user","isLoggedIn","login","setLogin","passwordVisible","setPasswordVisible","reset","index","routes","name","defaultValues","email","password","control","handleSubmit","errors","formState","onSubmit","data","navigate","rootContainter","require","loginBg","goBack","logoBackground","Containterlogin","inputWidth","required","field","onChange","onBlur","value","loginInput","inputError","LoginButtong","buttonStyle","LoginButtongTittle","loginBottom","needHelpBottom","contactUsBottom"],"sources":["D:/gitProject/craggy_cosmatics/src/screens/ForgetPasswordScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, ImageBackground, Image } from 'react-native';\nimport { Controller, useForm } from 'react-hook-form';\nimport TextInput from '../components/InputHook';\nimport { useDispatch, useSelector, } from 'react-redux';\nimport { loginActions } from '../store/UserSlice';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { TextInput as Input, Title } from 'react-native-paper';\nimport Checkbox from 'expo-checkbox';\nimport { useStyles } from '../styles/responsiveStyle';\nimport { Ionicons } from '@expo/vector-icons';\nimport BackButton from '../components/BackButton';\n\nconst ForgetPasswordScreen = ({ navigation }) => {\n\n    const styles = useStyles()\n    const [isChecked, setChecked] = useState(false);\n    const dispatch = useDispatch();\n    const logindata = useSelector(state => state.userData.user);\n    const isLoggedIn = useSelector(state => state.userData.isLoggedIn);\n    const [login, setLogin] = useState(false)\n    const [passwordVisible, setPasswordVisible] = useState(true);\n    useEffect(() => {\n        if (isLoggedIn == true) {\n            navigation.reset({\n                index: 0,\n                routes: [{ name: 'HomeScreen' }],\n            });\n            setLogin(true);\n\n        };\n    }, [login])\n\n    const { control, handleSubmit, reset, formState: { errors } } = useForm({\n        defaultValues: {\n            email: '',\n            password: '',\n        }\n    })\n    const onSubmit = (data) => {\n        navigation.navigate('OtpScreen');\n        reset();\n    }\n    return (\n        <View style={styles.rootContainter}>\n            <ImageBackground source={require('../../assets/images/login-bg.jpg')} resizeMode=\"cover\" style={styles.loginBg}>\n                <BackButton goBack={navigation.goBack} />\n                <Image source={require('../../assets/images/logo-image.jpg')} style={styles.logoBackground} />\n                    <View style={styles.Containterlogin}>\n                        <View style={styles.inputWidth}>\n                            <Controller\n                                control={control}\n                                rules={{\n                                    required: true,\n                                }}\n                                render={({ field: { onChange, onBlur, value } }) => (\n                                    <TextInput\n                                        style={styles.loginInput}\n                                        onChangeText={onChange}\n                                        value={value}\n                                        label=\"Email / Phone\"\n                                        returnKeyType=\"next\"\n                                        autoCapitalize=\"none\"\n                                        autoCompleteType=\"email\"\n                                        textContentType=\"emailAddress\"\n                                        keyboardType=\"email-address\"\n                                    />\n                                )}\n                                name=\"email\"\n                            />\n                            {errors.email && <Text style={styles.inputError}>This field is required.</Text>}\n                        </View>\n                        <View style={styles.LoginButtong}>\n                            <TouchableOpacity onPress={handleSubmit(onSubmit)} style={styles.buttonStyle}>\n                                <Title style={styles.LoginButtongTittle}>Send OTP</Title>\n                            </TouchableOpacity>\n                        </View>\n                    </View>\n                    <View style={styles.loginBottom}>\n                    <Text style={styles.needHelpBottom}>Need Help?</Text>\n                    <TouchableOpacity><Text style={styles.contactUsBottom}> Contact us</Text></TouchableOpacity>\n                </View>\n            </ImageBackground>\n        </View>\n    )\n}\n\nexport default ForgetPasswordScreen"],"mappings":"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"},"metadata":{},"sourceType":"module"}