{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nexport default function SceneView(_ref) {\n  var children = _ref.children,\n    navigationState = _ref.navigationState,\n    lazy = _ref.lazy,\n    layout = _ref.layout,\n    index = _ref.index,\n    lazyPreloadDistance = _ref.lazyPreloadDistance,\n    addEnterListener = _ref.addEnterListener,\n    style = _ref.style;\n  var _React$useState = React.useState(Math.abs(navigationState.index - index) > lazyPreloadDistance),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isLoading = _React$useState2[0],\n    setIsLoading = _React$useState2[1];\n  if (isLoading && Math.abs(navigationState.index - index) <= lazyPreloadDistance) {\n    setIsLoading(false);\n  }\n  React.useEffect(function () {\n    var handleEnter = function handleEnter(value) {\n      if (value === index) {\n        setIsLoading(function (prevState) {\n          if (prevState) {\n            return false;\n          }\n          return prevState;\n        });\n      }\n    };\n    var unsubscribe;\n    var timer;\n    if (lazy && isLoading) {\n      unsubscribe = addEnterListener(handleEnter);\n    } else if (isLoading) {\n      timer = setTimeout(function () {\n        return setIsLoading(false);\n      }, 0);\n    }\n    return function () {\n      var _unsubscribe;\n      (_unsubscribe = unsubscribe) === null || _unsubscribe === void 0 ? void 0 : _unsubscribe();\n      clearTimeout(timer);\n    };\n  }, [addEnterListener, index, isLoading, lazy]);\n  var focused = navigationState.index === index;\n  return React.createElement(View, {\n    accessibilityElementsHidden: !focused,\n    importantForAccessibility: focused ? 'auto' : 'no-hide-descendants',\n    style: [styles.route, layout.width ? {\n      width: layout.width\n    } : focused ? StyleSheet.absoluteFill : null, style]\n  }, focused || layout.width ? children({\n    loading: isLoading\n  }) : null);\n}\nvar styles = StyleSheet.create({\n  route: {\n    flex: 1,\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA;AAAA;AAoB9B,eAAe,SAASC,SAAS,OASpB;EAAA,IARXC,QAAQ,GAQCC,KARTD,QAAQ;IACRE,eAAe,GAOND,KAPTC,eAAe;IACfC,IAAI,GAMKF,KANTE,IAAI;IACJC,MAAM,GAKGH,KALTG,MAAM;IACNC,KAAK,GAIIJ,KAJTI,KAAK;IACLC,mBAAmB,GAGVL,KAHTK,mBAAmB;IACnBC,gBAAgB,GAEPN,KAFTM,gBAAgB;IAChBC,QACSP,KADTO;EAEA,sBAAkCV,KAAK,CAACW,QAAQ,CAC9CC,IAAI,CAACC,GAAG,CAACT,eAAe,CAACG,KAAK,GAAGA,KAAK,CAAC,GAAGC,mBAAmB,CAC9D;IAAA;IAFMM,SAAS;IAAEC,YAAY;EAI9B,IACED,SAAS,IACTF,IAAI,CAACC,GAAG,CAACT,eAAe,CAACG,KAAK,GAAGA,KAAK,CAAC,IAAIC,mBAAmB,EAC9D;IAEAO,YAAY,CAAC,KAAK,CAAC;EACrB;EAEAf,KAAK,CAACgB,SAAS,CAAC,YAAM;IACpB,IAAMC,WAAW,GAAIC,SAAfD,WAAW,CAAIC,KAAa,EAAK;MAErC,IAAIA,KAAK,KAAKX,KAAK,EAAE;QACnBQ,YAAY,CAAEI,mBAAS,EAAK;UAC1B,IAAIA,SAAS,EAAE;YACb,OAAO,KAAK;UACd;UACA,OAAOA,SAAS;QAClB,CAAC,CAAC;MACJ;IACF,CAAC;IAED,IAAIC,WAAqC;IACzC,IAAIC,KAAqB;IAEzB,IAAIhB,IAAI,IAAIS,SAAS,EAAE;MAErBM,WAAW,GAAGX,gBAAgB,CAACQ,WAAW,CAAC;IAC7C,CAAC,MAAM,IAAIH,SAAS,EAAE;MAGpBO,KAAK,GAAGC,UAAU,CAAC;QAAA,OAAMP,YAAY,CAAC,KAAK,CAAC;MAAA,GAAE,CAAC,CAAC;IAClD;IAEA,OAAO,YAAM;MAAA;MACX,2BAAW,iDAAXQ,cAAe;MACfC,YAAY,CAACH,KAAK,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,CAACZ,gBAAgB,EAAEF,KAAK,EAAEO,SAAS,EAAET,IAAI,CAAC,CAAC;EAE9C,IAAMoB,OAAO,GAAGrB,eAAe,CAACG,KAAK,KAAKA,KAAK;EAE/C,OACEP,oBAAC0B,IAAI;IACHC,2BAA2B,EAAE,CAACF,OAAQ;IACtCG,yBAAyB,EAAEH,OAAO,GAAG,MAAM,GAAG,qBAAsB;IACpEf,KAAK,EAAE,CACLmB,MAAM,CAACC,KAAK,EAGZxB,MAAM,CAACyB,KAAK,GACR;MAAEA,KAAK,EAAEzB,MAAM,CAACyB;IAAM,CAAC,GACvBN,OAAO,GACPO,UAAU,CAACC,YAAY,GACvB,IAAI,EACRvB,KAAK;EACL,GAMAe,OAAO,IAAInB,MAAM,CAACyB,KAAK,GAAG7B,QAAQ,CAAC;IAAEgC,OAAO,EAAEpB;EAAU,CAAC,CAAC,GAAG,IAAI,CAE9D;AAEX;AAEA,IAAMe,MAAM,GAAGG,UAAU,CAACG,MAAM,CAAC;EAC/BL,KAAK,EAAE;IACLM,IAAI,EAAE,CAAC;IACPC,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC","names":["React","SceneView","children","_ref","navigationState","lazy","layout","index","lazyPreloadDistance","addEnterListener","style","useState","Math","abs","isLoading","setIsLoading","useEffect","handleEnter","value","prevState","unsubscribe","timer","setTimeout","_unsubscribe","clearTimeout","focused","View","accessibilityElementsHidden","importantForAccessibility","styles","route","width","StyleSheet","absoluteFill","loading","create","flex","overflow"],"sourceRoot":"../../src","sources":["SceneView.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}