{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Controller, useForm } from 'react-hook-form';\nimport TextInput from \"../components/InputHook\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginActions } from \"../store/UserSlice\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { TextInput as Input, Title } from 'react-native-paper';\nimport { useStyles } from \"../styles/responsiveStyle\";\nimport BackButton from \"../components/BackButton\";\nimport axios from 'axios';\nimport useMailer from \"../utilFunctions/useMailer\";\nimport { otpTemp } from \"../../Data/mailTemplate/Mailer\";\nimport { meraFx } from \"../utilFunctions/mailFunction\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SignupScreen = function SignupScreen(_ref) {\n  var navigation = _ref.navigation;\n  var mailer = useMailer();\n  var dispatch = useDispatch();\n  var otpTemplate = otpTemp();\n  var styles = useStyles();\n  var _useForm = useForm({\n      defaultValues: {\n        FirstName: '',\n        LastName: '',\n        email: '',\n        PhoneNumber: '',\n        Password: ''\n      }\n    }),\n    control = _useForm.control,\n    handleSubmit = _useForm.handleSubmit,\n    reset = _useForm.reset,\n    errors = _useForm.formState.errors;\n  var timeout = function timeout() {\n    setTimeout(function () {\n      dispatch(loginActions.otp({\n        otp: ''\n      }));\n    }, 1000 * 60 * 10);\n  };\n  var onSubmit = function onSubmit(data) {\n    meraFx({\n      to: data.email,\n      from: \"moneymakkar@gmail.com\",\n      sub: otpTemplate.sub,\n      body: otpTemplate.body,\n      otp: otpTemplate.otp\n    });\n  };\n  return _jsx(View, {\n    style: styles.rootContainter,\n    children: _jsxs(ImageBackground, {\n      source: require(\"../../assets/images/login-bg.jpg\"),\n      resizeMode: \"cover\",\n      style: styles.loginBg,\n      children: [_jsx(BackButton, {\n        goBack: navigation.goBack\n      }), _jsx(Image, {\n        source: require(\"../../assets/images/logo-image.jpg\"),\n        style: styles.logoBackground\n      }), _jsxs(View, {\n        style: styles.Containterlogin,\n        children: [_jsxs(View, {\n          style: styles.inputWidth,\n          children: [_jsx(Controller, {\n            control: control,\n            rules: {\n              required: true\n            },\n            render: function render(_ref2) {\n              var _ref2$field = _ref2.field,\n                onChange = _ref2$field.onChange,\n                value = _ref2$field.value;\n              return _jsx(TextInput, {\n                style: styles.loginInput,\n                onChangeText: onChange,\n                value: value,\n                label: \"First Name\",\n                returnKeyType: \"next\",\n                keyboardType: \"text\"\n              });\n            },\n            name: \"fname\"\n          }), errors.FirstName && _jsx(Text, {\n            style: styles.inputError,\n            children: \"This field is required.\"\n          }), _jsx(Controller, {\n            control: control,\n            rules: {\n              required: true\n            },\n            render: function render(_ref3) {\n              var _ref3$field = _ref3.field,\n                onChange = _ref3$field.onChange,\n                value = _ref3$field.value;\n              return _jsx(TextInput, {\n                style: styles.loginInput,\n                onChangeText: onChange,\n                value: value,\n                label: \"Last Name\",\n                returnKeyType: \"next\",\n                keyboardType: \"text\"\n              });\n            },\n            name: \"lname\"\n          }), errors.LastName && _jsx(Text, {\n            style: styles.inputError,\n            children: \"This field is required.\"\n          }), _jsx(Controller, {\n            control: control,\n            rules: {\n              required: true\n            },\n            render: function render(_ref4) {\n              var _ref4$field = _ref4.field,\n                onChange = _ref4$field.onChange,\n                value = _ref4$field.value;\n              return _jsx(TextInput, {\n                style: styles.loginInput,\n                onChangeText: onChange,\n                value: value,\n                label: \"Email\",\n                returnKeyType: \"next\",\n                autoCapitalize: \"none\",\n                autoCompleteType: \"email\",\n                textContentType: \"emailAddress\",\n                keyboardType: \"email-address\"\n              });\n            },\n            name: \"email\"\n          }), errors.email && _jsx(Text, {\n            style: styles.inputError,\n            children: \"This field is required.\"\n          })]\n        }), _jsx(View, {\n          style: styles.LoginButtong,\n          children: _jsx(TouchableOpacity, {\n            onPress: handleSubmit(onSubmit),\n            style: styles.buttonStyle,\n            children: _jsx(Title, {\n              style: styles.LoginButtongTittle,\n              children: \"Sign Up\"\n            })\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.loginBottom,\n        children: [_jsx(Text, {\n          style: styles.needHelpBottom,\n          children: \"Already have an account ?\"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"login\");\n          },\n          children: _jsx(Text, {\n            style: styles.contactUsBottom,\n            children: \" Login\"\n          })\n        })]\n      })]\n    })\n  });\n};\nexport default SignupScreen;","map":{"version":3,"names":["React","useState","useEffect","Controller","useForm","TextInput","useDispatch","useSelector","loginActions","TouchableOpacity","Input","Title","useStyles","BackButton","axios","useMailer","otpTemp","meraFx","SignupScreen","navigation","mailer","dispatch","otpTemplate","styles","defaultValues","FirstName","LastName","email","PhoneNumber","Password","control","handleSubmit","reset","errors","formState","timeout","setTimeout","otp","onSubmit","data","to","from","sub","body","rootContainter","require","loginBg","goBack","logoBackground","Containterlogin","inputWidth","required","field","onChange","value","loginInput","inputError","LoginButtong","buttonStyle","LoginButtongTittle","loginBottom","needHelpBottom","navigate","contactUsBottom"],"sources":["D:/gitProject/craggy_cosmatics/src/screens/SignupScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, Button, ImageBackground, ScrollView, Image } from 'react-native';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport TextInput from '../components/InputHook';\r\nimport { useDispatch, useSelector, } from 'react-redux';\r\nimport { loginActions } from '../store/UserSlice';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport { TextInput as Input, Title } from 'react-native-paper';\r\nimport { useStyles } from '../styles/responsiveStyle';\r\nimport BackButton from '../components/BackButton';\r\nimport axios from 'axios';\r\nimport useMailer from '../utilFunctions/useMailer';\r\nimport { otpTemp } from '../../Data/mailTemplate/Mailer';\r\nimport { meraFx } from '../utilFunctions/mailFunction';\r\n\r\n\r\nconst SignupScreen = ({ navigation }) => {\r\n    const mailer = useMailer();\r\n    const dispatch = useDispatch();\r\n    const otpTemplate = otpTemp();\r\n    const styles = useStyles()\r\n    // const [isChecked, setChecked] = useState(false);\r\n    // const dispatch = useDispatch();\r\n    // const logindata = useSelector(state => state.userData.user);\r\n    // const isLoggedIn = useSelector(state => state.userData.isLoggedIn);\r\n    // // console.log(\"logged-in \", isLoggedIn)\r\n    // const [login, setLogin] = useState(false)\r\n    // const [passwordVisible, setPasswordVisible] = useState(true);\r\n\r\n    const { control, handleSubmit, reset, formState: { errors } } = useForm({\r\n        defaultValues: {\r\n            FirstName: '',\r\n            LastName: '',\r\n            email: '',\r\n            PhoneNumber: '',\r\n            Password: ''\r\n        }\r\n    })\r\n\r\n    const timeout = () => {\r\n        setTimeout(() => {\r\n            dispatch(loginActions.otp(\r\n                {\r\n                    otp: ''\r\n                }\r\n            ));\r\n            // console.log('otp expired')\r\n        }, (1000 * 60) * 10);\r\n    }\r\n\r\n    const onSubmit = (data) => {\r\n\r\n        meraFx({\r\n            to: data.email,\r\n            from: \"moneymakkar@gmail.com\",\r\n            sub: otpTemplate.sub,\r\n            body: otpTemplate.body,\r\n            otp: otpTemplate.otp\r\n        });\r\n\r\n\r\n\r\n        // dispatch(loginActions.otp(\r\n        //     {\r\n        //         otp: otpVal\r\n        //     }\r\n        // ));\r\n\r\n        // axios({\r\n        //     method: 'post',\r\n        //     url: 'https://craggycosmetic.com/api/user/auth/',\r\n        //     data: {\r\n        //         to: data.email,\r\n        //         otp: otpVal\r\n        //     },\r\n        //     headers: {\r\n        //         'Content-Type': 'application/json',\r\n        //         'consumer_key': '3b137de2b677819b965ddb7288bd73f62fc6c1f04a190678ca6e72fca3986629'\r\n        //     }\r\n        // }).then((res) => {\r\n        //     // console.log(res.data)\r\n        //     if (res.data.status === 200) {\r\n        //         reset();\r\n        //         navigation.navigate('SignupOtpScreen', { email: data.email })\r\n        //     }\r\n        //     timeout()\r\n        // })\r\n    }\r\n\r\n\r\n    return (\r\n        <View style={styles.rootContainter}>\r\n            <ImageBackground source={require('../../assets/images/login-bg.jpg')} resizeMode=\"cover\" style={styles.loginBg}>\r\n                <BackButton goBack={navigation.goBack} />\r\n                <Image source={require('../../assets/images/logo-image.jpg')} style={styles.logoBackground} />\r\n                <View style={styles.Containterlogin}>\r\n                    <View style={styles.inputWidth}>\r\n                        <Controller\r\n                            control={control}\r\n                            rules={{\r\n                                required: true,\r\n                            }}\r\n                            render={({ field: { onChange, value } }) => (\r\n                                <TextInput\r\n                                    style={styles.loginInput}\r\n                                    onChangeText={onChange}\r\n                                    value={value}\r\n                                    label=\"First Name\"\r\n                                    returnKeyType=\"next\"\r\n                                    keyboardType=\"text\"\r\n                                />\r\n                            )}\r\n                            name=\"fname\"\r\n                        />\r\n                        {errors.FirstName && <Text style={styles.inputError}>This field is required.</Text>}\r\n                        <Controller\r\n                            control={control}\r\n                            rules={{\r\n                                required: true,\r\n                            }}\r\n                            render={({ field: { onChange, value } }) => (\r\n                                <TextInput\r\n                                    style={styles.loginInput}\r\n                                    onChangeText={onChange}\r\n                                    value={value}\r\n                                    label=\"Last Name\"\r\n                                    returnKeyType=\"next\"\r\n                                    keyboardType=\"text\"\r\n                                />\r\n                            )}\r\n                            name=\"lname\"\r\n                        />\r\n                        {errors.LastName && <Text style={styles.inputError}>This field is required.</Text>}\r\n\r\n                        <Controller\r\n                            control={control}\r\n                            rules={{\r\n                                required: true,\r\n                            }}\r\n                            render={({ field: { onChange, value } }) => (\r\n                                <TextInput\r\n                                    style={styles.loginInput}\r\n                                    onChangeText={onChange}\r\n                                    value={value}\r\n                                    label=\"Email\"\r\n                                    returnKeyType=\"next\"\r\n                                    autoCapitalize=\"none\"\r\n                                    autoCompleteType=\"email\"\r\n                                    textContentType=\"emailAddress\"\r\n                                    keyboardType=\"email-address\"\r\n                                />\r\n                            )}\r\n                            name=\"email\"\r\n                        />\r\n                        {errors.email && <Text style={styles.inputError}>This field is required.</Text>}\r\n\r\n                    </View>\r\n\r\n                    <View style={styles.LoginButtong}>\r\n                        <TouchableOpacity onPress={handleSubmit(onSubmit)} style={styles.buttonStyle}>\r\n                            <Title style={styles.LoginButtongTittle}>Sign Up</Title>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n                <View style={styles.loginBottom}>\r\n                    <Text style={styles.needHelpBottom}>Already have an account ?</Text>\r\n                    <TouchableOpacity onPress={() => navigation.navigate(\"login\")}>\r\n                        <Text style={styles.contactUsBottom}> Login</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </ImageBackground>\r\n\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default SignupScreen;"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEnD,SAASC,UAAU,EAAEC,OAAO,QAAQ,iBAAiB;AACrD,OAAOC,SAAS;AAChB,SAASC,WAAW,EAAEC,WAAW,QAAS,aAAa;AACvD,SAASC,YAAY;AACrB,SAASC,gBAAgB,QAAQ,8BAA8B;AAC/D,SAASJ,SAAS,IAAIK,KAAK,EAAEC,KAAK,QAAQ,oBAAoB;AAC9D,SAASC,SAAS;AAClB,OAAOC,UAAU;AACjB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS;AAChB,SAASC,OAAO;AAChB,SAASC,MAAM;AAAwC;AAAA;AAGvD,IAAMC,YAAY,GAAG,SAAfA,YAAY,OAAuB;EAAA,IAAjBC,UAAU,QAAVA,UAAU;EAC9B,IAAMC,MAAM,GAAGL,SAAS,EAAE;EAC1B,IAAMM,QAAQ,GAAGf,WAAW,EAAE;EAC9B,IAAMgB,WAAW,GAAGN,OAAO,EAAE;EAC7B,IAAMO,MAAM,GAAGX,SAAS,EAAE;EAS1B,eAAgER,OAAO,CAAC;MACpEoB,aAAa,EAAE;QACXC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,EAAE;QACfC,QAAQ,EAAE;MACd;IACJ,CAAC,CAAC;IARMC,OAAO,YAAPA,OAAO;IAAEC,YAAY,YAAZA,YAAY;IAAEC,KAAK,YAALA,KAAK;IAAeC,MAAM,YAAnBC,SAAS,CAAID,MAAM;EAUzD,IAAME,OAAO,GAAG,SAAVA,OAAO,GAAS;IAClBC,UAAU,CAAC,YAAM;MACbf,QAAQ,CAACb,YAAY,CAAC6B,GAAG,CACrB;QACIA,GAAG,EAAE;MACT,CAAC,CACJ,CAAC;IAEN,CAAC,EAAG,IAAI,GAAG,EAAE,GAAI,EAAE,CAAC;EACxB,CAAC;EAED,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,CAAIC,IAAI,EAAK;IAEvBtB,MAAM,CAAC;MACHuB,EAAE,EAAED,IAAI,CAACZ,KAAK;MACdc,IAAI,EAAE,uBAAuB;MAC7BC,GAAG,EAAEpB,WAAW,CAACoB,GAAG;MACpBC,IAAI,EAAErB,WAAW,CAACqB,IAAI;MACtBN,GAAG,EAAEf,WAAW,CAACe;IACrB,CAAC,CAAC;EA6BN,CAAC;EAGD,OACI,KAAC,IAAI;IAAC,KAAK,EAAEd,MAAM,CAACqB,cAAe;IAAA,UAC/B,MAAC,eAAe;MAAC,MAAM,EAAEC,OAAO,oCAAqC;MAAC,UAAU,EAAC,OAAO;MAAC,KAAK,EAAEtB,MAAM,CAACuB,OAAQ;MAAA,WAC3G,KAAC,UAAU;QAAC,MAAM,EAAE3B,UAAU,CAAC4B;MAAO,EAAG,EACzC,KAAC,KAAK;QAAC,MAAM,EAAEF,OAAO,sCAAuC;QAAC,KAAK,EAAEtB,MAAM,CAACyB;MAAe,EAAG,EAC9F,MAAC,IAAI;QAAC,KAAK,EAAEzB,MAAM,CAAC0B,eAAgB;QAAA,WAChC,MAAC,IAAI;UAAC,KAAK,EAAE1B,MAAM,CAAC2B,UAAW;UAAA,WAC3B,KAAC,UAAU;YACP,OAAO,EAAEpB,OAAQ;YACjB,KAAK,EAAE;cACHqB,QAAQ,EAAE;YACd,CAAE;YACF,MAAM,EAAE;cAAA,wBAAGC,KAAK;gBAAIC,QAAQ,eAARA,QAAQ;gBAAEC,KAAK,eAALA,KAAK;cAAA,OAC/B,KAAC,SAAS;gBACN,KAAK,EAAE/B,MAAM,CAACgC,UAAW;gBACzB,YAAY,EAAEF,QAAS;gBACvB,KAAK,EAAEC,KAAM;gBACb,KAAK,EAAC,YAAY;gBAClB,aAAa,EAAC,MAAM;gBACpB,YAAY,EAAC;cAAM,EACrB;YAAA,CACJ;YACF,IAAI,EAAC;UAAO,EACd,EACDrB,MAAM,CAACR,SAAS,IAAI,KAAC,IAAI;YAAC,KAAK,EAAEF,MAAM,CAACiC,UAAW;YAAA,UAAC;UAAuB,EAAO,EACnF,KAAC,UAAU;YACP,OAAO,EAAE1B,OAAQ;YACjB,KAAK,EAAE;cACHqB,QAAQ,EAAE;YACd,CAAE;YACF,MAAM,EAAE;cAAA,wBAAGC,KAAK;gBAAIC,QAAQ,eAARA,QAAQ;gBAAEC,KAAK,eAALA,KAAK;cAAA,OAC/B,KAAC,SAAS;gBACN,KAAK,EAAE/B,MAAM,CAACgC,UAAW;gBACzB,YAAY,EAAEF,QAAS;gBACvB,KAAK,EAAEC,KAAM;gBACb,KAAK,EAAC,WAAW;gBACjB,aAAa,EAAC,MAAM;gBACpB,YAAY,EAAC;cAAM,EACrB;YAAA,CACJ;YACF,IAAI,EAAC;UAAO,EACd,EACDrB,MAAM,CAACP,QAAQ,IAAI,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACiC,UAAW;YAAA,UAAC;UAAuB,EAAO,EAElF,KAAC,UAAU;YACP,OAAO,EAAE1B,OAAQ;YACjB,KAAK,EAAE;cACHqB,QAAQ,EAAE;YACd,CAAE;YACF,MAAM,EAAE;cAAA,wBAAGC,KAAK;gBAAIC,QAAQ,eAARA,QAAQ;gBAAEC,KAAK,eAALA,KAAK;cAAA,OAC/B,KAAC,SAAS;gBACN,KAAK,EAAE/B,MAAM,CAACgC,UAAW;gBACzB,YAAY,EAAEF,QAAS;gBACvB,KAAK,EAAEC,KAAM;gBACb,KAAK,EAAC,OAAO;gBACb,aAAa,EAAC,MAAM;gBACpB,cAAc,EAAC,MAAM;gBACrB,gBAAgB,EAAC,OAAO;gBACxB,eAAe,EAAC,cAAc;gBAC9B,YAAY,EAAC;cAAe,EAC9B;YAAA,CACJ;YACF,IAAI,EAAC;UAAO,EACd,EACDrB,MAAM,CAACN,KAAK,IAAI,KAAC,IAAI;YAAC,KAAK,EAAEJ,MAAM,CAACiC,UAAW;YAAA,UAAC;UAAuB,EAAO;QAAA,EAE5E,EAEP,KAAC,IAAI;UAAC,KAAK,EAAEjC,MAAM,CAACkC,YAAa;UAAA,UAC7B,KAAC,gBAAgB;YAAC,OAAO,EAAE1B,YAAY,CAACO,QAAQ,CAAE;YAAC,KAAK,EAAEf,MAAM,CAACmC,WAAY;YAAA,UACzE,KAAC,KAAK;cAAC,KAAK,EAAEnC,MAAM,CAACoC,kBAAmB;cAAA,UAAC;YAAO;UAAQ;QACzC,EAChB;MAAA,EACJ,EACP,MAAC,IAAI;QAAC,KAAK,EAAEpC,MAAM,CAACqC,WAAY;QAAA,WAC5B,KAAC,IAAI;UAAC,KAAK,EAAErC,MAAM,CAACsC,cAAe;UAAA,UAAC;QAAyB,EAAO,EACpE,KAAC,gBAAgB;UAAC,OAAO,EAAE;YAAA,OAAM1C,UAAU,CAAC2C,QAAQ,CAAC,OAAO,CAAC;UAAA,CAAC;UAAA,UAC1D,KAAC,IAAI;YAAC,KAAK,EAAEvC,MAAM,CAACwC,eAAgB;YAAA,UAAC;UAAM;QAAO,EACnC;MAAA,EAChB;IAAA;EACO,EAGf;AAEf,CAAC;AAED,eAAe7C,YAAY"},"metadata":{},"sourceType":"module"}